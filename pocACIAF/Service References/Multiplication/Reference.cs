//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pocACIAF.Multiplication {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Multiplication")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathData", Namespace="http://schemas.datacontract.org/2004/07/Multiplication")]
    [System.SerializableAttribute()]
    public partial class MathData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FArg1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FArg2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FRsltArgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrArg1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrArg2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrConcatRsltField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FArg1 {
            get {
                return this.FArg1Field;
            }
            set {
                if ((this.FArg1Field.Equals(value) != true)) {
                    this.FArg1Field = value;
                    this.RaisePropertyChanged("FArg1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FArg2 {
            get {
                return this.FArg2Field;
            }
            set {
                if ((this.FArg2Field.Equals(value) != true)) {
                    this.FArg2Field = value;
                    this.RaisePropertyChanged("FArg2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FRsltArg {
            get {
                return this.FRsltArgField;
            }
            set {
                if ((this.FRsltArgField.Equals(value) != true)) {
                    this.FRsltArgField = value;
                    this.RaisePropertyChanged("FRsltArg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrArg1 {
            get {
                return this.StrArg1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StrArg1Field, value) != true)) {
                    this.StrArg1Field = value;
                    this.RaisePropertyChanged("StrArg1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrArg2 {
            get {
                return this.StrArg2Field;
            }
            set {
                if ((object.ReferenceEquals(this.StrArg2Field, value) != true)) {
                    this.StrArg2Field = value;
                    this.RaisePropertyChanged("StrArg2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrConcatRslt {
            get {
                return this.StrConcatRsltField;
            }
            set {
                if ((object.ReferenceEquals(this.StrConcatRsltField, value) != true)) {
                    this.StrConcatRsltField = value;
                    this.RaisePropertyChanged("StrConcatRslt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Multiplication.IMultiplication")]
    public interface IMultiplication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/GetData", ReplyAction="http://tempuri.org/IMultiplication/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/GetData", ReplyAction="http://tempuri.org/IMultiplication/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMultiplication/GetDataUsingDataContractResponse")]
        pocACIAF.Multiplication.CompositeType GetDataUsingDataContract(pocACIAF.Multiplication.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMultiplication/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<pocACIAF.Multiplication.CompositeType> GetDataUsingDataContractAsync(pocACIAF.Multiplication.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/MultiplyArray", ReplyAction="http://tempuri.org/IMultiplication/MultiplyArrayResponse")]
        pocACIAF.Multiplication.MathData[] MultiplyArray(pocACIAF.Multiplication.MathData[] md);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplication/MultiplyArray", ReplyAction="http://tempuri.org/IMultiplication/MultiplyArrayResponse")]
        System.Threading.Tasks.Task<pocACIAF.Multiplication.MathData[]> MultiplyArrayAsync(pocACIAF.Multiplication.MathData[] md);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplicationChannel : pocACIAF.Multiplication.IMultiplication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplicationClient : System.ServiceModel.ClientBase<pocACIAF.Multiplication.IMultiplication>, pocACIAF.Multiplication.IMultiplication {
        
        public MultiplicationClient() {
        }
        
        public MultiplicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultiplicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public pocACIAF.Multiplication.CompositeType GetDataUsingDataContract(pocACIAF.Multiplication.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<pocACIAF.Multiplication.CompositeType> GetDataUsingDataContractAsync(pocACIAF.Multiplication.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public pocACIAF.Multiplication.MathData[] MultiplyArray(pocACIAF.Multiplication.MathData[] md) {
            return base.Channel.MultiplyArray(md);
        }
        
        public System.Threading.Tasks.Task<pocACIAF.Multiplication.MathData[]> MultiplyArrayAsync(pocACIAF.Multiplication.MathData[] md) {
            return base.Channel.MultiplyArrayAsync(md);
        }
    }
}
